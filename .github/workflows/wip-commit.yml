name: WIP commits

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  wip-commits:
    runs-on: ubuntu-latest
    steps:
#        - name: Convert to Draft
#          run: |
#           echo ${{github.event.action}}
#           echo ${{github.event.type}}
#           echo ${{github.pull_request.action}}
#           echo ${{github.pull_request.type}}
       - name: Convert to Draft
         if: ${{!github.event.pull_request.draft}}
         uses: actions/github-script@v4
         with:
          script: |
            const wipCommits = await github.pulls.listCommits({
              owner: context.issue.owner,
              repo: context.issue.repo,
              pull_number: context.issue.number,
            }).then(({data}) => data.filter(({commit}) => commit.message === 'WIP'))
  
            console.log(wipCommits)
            
      #.map(({commit}) => commit.html_url));
            
    #    console.log(context)
     #       console.log("================================")
     
     
     
        #         env:
#           COMMENT_ID: ${{ steps.add-comment.outputs.result }}
#           RESULT: ${{ steps.run-tests.outputs.workflow-conclusion }}
#           URL: ${{ steps.run-tests.outputs.workflow-url }}

            # const { COMMENT_ID, RESULT, URL, STATUS } = process.env
            # github.issues.updateComment({
            #   issue_number: context.issue.number,
            #   owner: context.repo.owner,
            #   repo: context.repo.repo,
            #   comment_id: COMMENT_ID,
            #   body: RESULT === 'success'
            #     ? `#### Tests completed! :tada:\n\n>Result: ${RESULT}\n>Log: ${URL}`
            #     : `#### Tests failed! :angry:\n\n>Result: ${RESULT}\n>Log: ${URL}`
            # })
