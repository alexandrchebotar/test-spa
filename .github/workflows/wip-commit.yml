name: WIP commits

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  wip-commits:
    runs-on: ubuntu-latest
    steps:
#        - name: Convert to Draft
#          run: |
#           echo ${{github.event.action}}
#           echo ${{github.event.type}}
#           echo ${{github.pull_request.action}}
#           echo ${{github.pull_request.type}}
       - name: Convert to Draft
         id: get-wip-commits
         if: ${{!github.event.pull_request.draft}}
         uses: actions/github-script@v4
         with:
          script: |
            const wipCommits = await github.pulls.listCommits({
              owner: context.issue.owner,
              repo: context.issue.repo,
              pull_number: context.issue.number,
            }).then(({data}) => data.filter(({commit}) => commit.message === 'WIP'))
  
            console.log(wipCommits)
            return wipCommits
          
       - name: Convert to Draft
         if: steps.get-wip-commits.outputs.result 
         run: |
           echo "There are WIP commits"
           exit 1
           
       - name: Convert to Draft
         if: fail()
         env:
            WIP_COMMENTS: ${{ steps.add-comment.outputs.result }}
            RESULT: ${{ steps.run-tests.outputs.workflow-conclusion }}
            URL: ${{ steps.run-tests.outputs.workflow-url }}
         uses: actions/github-script@v4
         with:
          script: |
            const { WIP_COMMENTS } = process.env
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.issue.owner,
              repo: context.issue.repo,
              body: `#### WIP commits:${WIP_COMMENTS.forEach(({sha, html_url}) => `\n\n- [${}](${URL})`}`
            })
            
      #.map(({commit}) => commit.html_url));
            
    #    console.log(context)
     #       console.log("================================")
     
     
     

